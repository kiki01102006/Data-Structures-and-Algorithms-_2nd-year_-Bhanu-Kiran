import java.util.Scanner;


class Node {
    int data;
    Node next;

    Node(int d) {
        data = d;
        next = null;
    }
}

// Stack class using ll
class StackLL {
    Node top = null;

    
   static void push(int d) {
        Node newNode = new Node(d);
        newNode.next = top;   // link new node to previous top
        top = newNode;        // update top
        System.out.println(d + " pushed to stack");
    }

  
   static void pop() {
        if (top == null) {
            System.out.println("Stack Underflow (Empty)");
            return;
        }
        System.out.println("Popped: " + top.data);
        top = top.next;   // move top pointer down
    }

    
  static  void display() {
        if (top == null) {
            System.out.println("Stack is Empty");
            return;
        }
        System.out.print("Stack: ");
        Node temp = top;
        while (temp != null) {
            System.out.print(temp.data + " -> ");
            temp = temp.next;
        }
        System.out.println("NULL");
    }

   
   static void peek() {
        if (top == null)
            System.out.println("Stack is Empty");
        else
            System.out.println("Top element: " + top.data);
    }
}

// Main class
public class StackUsingLL {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StackLL stack = new StackLL();
        int choice;

        do {
            System.out.println("\n1.Push  2.Pop  3.Display  4.Peek  5.Exit");
            choice = sc.nextInt();

            switch (choice) {
                case 1 -> {
                    System.out.print("Enter value: ");
                    int val = sc.nextInt();
                    stack.push(val);
                }
                case 2 -> stack.pop();
                case 3 -> stack.display();
                case 4 -> stack.peek();
                case 5 -> System.out.println("Exiting...");
                default -> System.out.println("Invalid choice!");
            }
        } while (choice != 5);
    }
}
